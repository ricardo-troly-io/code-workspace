order_ids = [13071, 13054, 12945, 12946, 12949, 12950, 12986, 12981, 12952, 12879, 12966, 12968, 12973, 12977, 12991, 13005, 13015, 12985, 13082, 12988, 13009, 12961, 13000, 13059, 13068, 13076, 13023, 13056, 13018, 12993, 13052, 12974, 12982, 13010, 13057, 13053, 13067, 12999, 12994, 13019, 12978, 12984, 13001, 13004, 13006, 13008, 13030, 13035, 13033, 13060, 13065, 12959, 12962, 12972, 12989, 12992, 13021, 13022, 12947, 12865, 12943, 12975, 12958, 12969, 12971, 12983, 12987, 12995, 12997, 12998, 13013, 13017, 13020, 13026, 13029, 13031, 13049, 13055, 13061, 13069, 13063, 12956, 12967, 12976, 13028, 13032, 13066, 13002, 13016, 12955, 12948, 12954, 12965, 12996, 13070, 13072, 12960, 13007, 12979, 12944, 13027, 12963, 12957, 13012, 13011, 13014, 12953, 12980, 13062]

Orderlines.where(:id => order_ids).group(:product_id).count

Order.where(:id => order_ids, :is_standard => false).each do |o|
puts "#{o.id} -> #{o.orderlines.where("product_id > 50").where(:display_only => false).count} - #{o.is_standard}"
end;nil 





order_ids = Shipment.where(:company_id => 10044, :status => 'needs_packing','needs_labeling','needs_dispatching').pluck(:order_id)

order_ids = [13071, 13054, 12945, 12950, 12981, 12952, 12879, 12968, 12973, 13005, 13015, 13082, 12988, 13009, 12961, 13000, 13059, 13068, 13076, 13056, 13052, 12974, 12982, 13010, 12999, 12994, 13053, 13019, 13067, 12978, 13004, 13006, 13060, 13008, 12989, 13021, 13065, 12959, 12962, 12972, 13022, 12947, 12865, 12943, 12975, 12958, 12969, 12971, 12987, 12995, 12998, 13020, 13013, 13029, 13049, 13061, 13069, 13063, 13066, 13028, 13032, 13016, 12955, 12948, 13002, 12996, 12954, 12965, 13070, 12960, 12979, 12944, 13027, 12963, 12957, 13012, 13011, 12953, 12980, 13062]

shipment_ids = [12544, 12527, 12420, 12425, 12455, 12426, 12356, 12442, 12447, 12479, 12489, 12553, 12462, 12483, 12435, 12474, 12532, 12541, 12549, 12529, 12525, 12448, 12456, 12484, 12473, 12468, 12526, 12493, 12540, 12452, 12478, 12480, 12533, 12482, 12463, 12495, 12538, 12433, 12436, 12446, 12496, 12422, 12342, 12418, 12449, 12432, 12443, 12445, 12461, 12469, 12472, 12494, 12487, 12503, 12522, 12534, 12542, 12536, 12539, 12502, 12506, 12490, 12551, 12423, 12476, 12470, 12428, 12439, 12543, 12434, 12453, 12419, 12501, 12437, 12431, 12486, 12485, 12427, 12454, 12535]



Processors::Report.pack_orders Order.where(:id => order_ids)



temp_ids = Order.where(:id => order_ids, :is_standard => true, :display_only => false)
Orderlins.where(:order_id => temp_ids).group(:product_id).count


order_ids = [13071, 13054, 12981, 12952, 12879, 12968, 12973, 12977, 13005, 13015, 12988, 13009, 13000, 13076, 13068, 13056, 13052, 12974, 12982, 13010, 13019, 12994, 13053, 12999, 13067, 13004, 13006, 12978, 13008, 12959, 12962, 13022, 12950, 13082, 12961, 12947, 12945, 13065, 12972, 12989, 13021, 13016, 13059, 13060, 12865, 12943, 12975, 12958, 12969, 12971, 12987, 12995, 12998, 13013, 13020, 13029, 13049, 13061, 13069, 13063, 13028, 13032, 13066, 13002, 12948, 12955, 12996, 12954, 12965, 13070, 12960, 12979, 12944, 12963, 13027, 12957, 13012, 13011, 12953, 12980, 13062]

#
# Export a csv list of all non-standard shipments into a tb-delimited "csv format"
#
product_ids = Orderline.where(:order_id => order_ids, :display_only => false).where("product_id > 100").sum(:qty)
products = []
product_ids.each do |p,total|
  products << Product.find(p).name
end
puts "\t" + products.join("\t")
total = 0
Order.where(:id => order_ids, :is_standard => false).each do |o|
  products = ""
  product_ids.each do |pid|
    next if pid.include?([50,10392])
    if o.orderlines.where(:product_id => pid).exists?
      products += "#{o.orderlines.where(:product_id => pid).sum(:qty)}\t"
      total += o.orderlines.where(:product_id => pid).sum(:qty)
    else 
    products += "\t"
    end
  end
  puts "#{o.customer}\t#{products}"
end;nil
puts total